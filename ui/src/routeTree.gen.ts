/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutSessionsIndexImport } from './routes/_layout/sessions/index'
import { Route as LayoutSessionsSessionIdImport } from './routes/_layout/sessions/$sessionId'
import { Route as LayoutDataLayoutDatasourcesImport } from './routes/_layout/data/_layout-datasources'
import { Route as LayoutDataLayoutDatasourcesIndexImport } from './routes/_layout/data/_layout-datasources/index'
import { Route as LayoutDataLayoutDatasourcesDataSourceIdImport } from './routes/_layout/data/_layout-datasources/$dataSourceId'

// Create Virtual Routes

const LayoutDataImport = createFileRoute('/_layout/data')()

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const LayoutDataRoute = LayoutDataImport.update({
  path: '/data',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutSessionsIndexRoute = LayoutSessionsIndexImport.update({
  path: '/sessions/',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/sessions/index.lazy').then((d) => d.Route),
)

const LayoutSessionsSessionIdRoute = LayoutSessionsSessionIdImport.update({
  path: '/sessions/$sessionId',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout/sessions/$sessionId.lazy').then((d) => d.Route),
)

const LayoutDataLayoutDatasourcesRoute =
  LayoutDataLayoutDatasourcesImport.update({
    id: '/_layout-datasources',
    getParentRoute: () => LayoutDataRoute,
  } as any)

const LayoutDataLayoutDatasourcesIndexRoute =
  LayoutDataLayoutDatasourcesIndexImport.update({
    path: '/',
    getParentRoute: () => LayoutDataLayoutDatasourcesRoute,
  } as any).lazy(() =>
    import('./routes/_layout/data/_layout-datasources/index.lazy').then(
      (d) => d.Route,
    ),
  )

const LayoutDataLayoutDatasourcesDataSourceIdRoute =
  LayoutDataLayoutDatasourcesDataSourceIdImport.update({
    path: '/$dataSourceId',
    getParentRoute: () => LayoutDataLayoutDatasourcesRoute,
  } as any).lazy(() =>
    import('./routes/_layout/data/_layout-datasources/$dataSourceId.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/data': {
      id: '/_layout/data'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof LayoutDataImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/data/_layout-datasources': {
      id: '/_layout/data/_layout-datasources'
      path: '/data'
      fullPath: '/data'
      preLoaderRoute: typeof LayoutDataLayoutDatasourcesImport
      parentRoute: typeof LayoutDataRoute
    }
    '/_layout/sessions/$sessionId': {
      id: '/_layout/sessions/$sessionId'
      path: '/sessions/$sessionId'
      fullPath: '/sessions/$sessionId'
      preLoaderRoute: typeof LayoutSessionsSessionIdImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/sessions/': {
      id: '/_layout/sessions/'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof LayoutSessionsIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/data/_layout-datasources/$dataSourceId': {
      id: '/_layout/data/_layout-datasources/$dataSourceId'
      path: '/$dataSourceId'
      fullPath: '/data/$dataSourceId'
      preLoaderRoute: typeof LayoutDataLayoutDatasourcesDataSourceIdImport
      parentRoute: typeof LayoutDataLayoutDatasourcesImport
    }
    '/_layout/data/_layout-datasources/': {
      id: '/_layout/data/_layout-datasources/'
      path: '/'
      fullPath: '/data/'
      preLoaderRoute: typeof LayoutDataLayoutDatasourcesIndexImport
      parentRoute: typeof LayoutDataLayoutDatasourcesImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  LayoutRoute: LayoutRoute.addChildren({
    LayoutDataRoute: LayoutDataRoute.addChildren({
      LayoutDataLayoutDatasourcesRoute:
        LayoutDataLayoutDatasourcesRoute.addChildren({
          LayoutDataLayoutDatasourcesDataSourceIdRoute,
          LayoutDataLayoutDatasourcesIndexRoute,
        }),
    }),
    LayoutSessionsSessionIdRoute,
    LayoutSessionsIndexRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/data",
        "/_layout/sessions/$sessionId",
        "/_layout/sessions/"
      ]
    },
    "/_layout/data": {
      "filePath": "_layout/data",
      "parent": "/_layout",
      "children": [
        "/_layout/data/_layout-datasources"
      ]
    },
    "/_layout/data/_layout-datasources": {
      "filePath": "_layout/data/_layout-datasources.tsx",
      "parent": "/_layout/data",
      "children": [
        "/_layout/data/_layout-datasources/$dataSourceId",
        "/_layout/data/_layout-datasources/"
      ]
    },
    "/_layout/sessions/$sessionId": {
      "filePath": "_layout/sessions/$sessionId.tsx",
      "parent": "/_layout"
    },
    "/_layout/sessions/": {
      "filePath": "_layout/sessions/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/data/_layout-datasources/$dataSourceId": {
      "filePath": "_layout/data/_layout-datasources/$dataSourceId.tsx",
      "parent": "/_layout/data/_layout-datasources"
    },
    "/_layout/data/_layout-datasources/": {
      "filePath": "_layout/data/_layout-datasources/index.tsx",
      "parent": "/_layout/data/_layout-datasources"
    }
  }
}
ROUTE_MANIFEST_END */
